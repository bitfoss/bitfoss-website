{"version":3,"sources":["components/Page.tsx","pages/Home.tsx","pages/NotFound.tsx","pages/Projects.tsx","components/Animation.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Page","props","Helmet","title","name","content","description","simple","className","centerTitle","children","Home","firstSentence","target","rel","href","to","NotFound","location","useLocation","pathname","search","hash","ProjectItem","src","imgSrc","alt","style","height","demoUrl","sourceUrl","Projects","map","p","AnimationType","FadeInAnimated","styled","div","keyframes","fadeIn","Animation","hidden","App","useState","isMenuOpen","setIsMenuOpen","MenuLink","activeClassName","onClick","exact","component","e","includes","text","size","type","FadeIn","path","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3eb4a684.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface PageProps {\r\n    simple?: boolean;\r\n    title: string;\r\n    description?: string;\r\n    children?: React.ReactNode;\r\n    centerTitle?: boolean;\r\n}\r\n\r\nexport const Page = (props: PageProps) => {\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Bitfoss - {props.title}</title>\r\n                <meta name=\"description\" content={props.description} />\r\n            </Helmet>\r\n            {props.simple ? null : (\r\n                <>\r\n                    <h1 className={props.centerTitle ? \"text-center\" : \"text-left\"}>{props.title}</h1>\r\n                </>\r\n            )}\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Page } from '../components/Page';\r\n\r\nexport const Home = () => {\r\n    const firstSentence = \"Bitfoss is all about free, open-source software projects, developed mostly for fun. \";\r\n\r\n    return (\r\n        <Page title=\"Welcome to Bitfoss!\" simple description={firstSentence}>\r\n            <div>\r\n                <h4>What's Bitfoss all about?</h4>\r\n                <p>\r\n                    {firstSentence}\r\n                    All projects are developed with the following mindset,\r\n                    slightly inspired by the <a target=\"_blank\" rel=\"noreferrer\"  href=\"https://en.wikipedia.org/wiki/MoSCoW_method\">MoSCoW method</a>.\r\n                </p>\r\n                <ul>\r\n                    <li>It <b>must</b> be fun to implement</li>\r\n                    <li>It <b>should</b> be challenging to implement</li>\r\n                    <li>It <b>could</b> be useful for other people than yourself</li>\r\n                    <li>It <b>won't</b> be perfect</li>\r\n                </ul>\r\n                <p>\r\n                    Browse through the projects <NavLink to=\"/projects\">here</NavLink>.\r\n                </p>\r\n\r\n                <h4>Who are the developers?</h4>\r\n                <ul>\r\n                    <li><a href=\"https://github.com/JessenMorten\">Morten Jessen</a></li>\r\n                </ul>\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { Page } from '../components/Page';\r\n\r\nexport const NotFound = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <Page title=\"Not found\" centerTitle>\r\n            <div className=\"text-center\">\r\n                <p>Sorry, the page you're looking for does not exist.</p>\r\n                <p>\r\n                    <span className=\"text-danger\">{location.pathname}</span>\r\n                    <span className=\"text-secondary\">{location.search}{location.hash}</span>\r\n                </p>\r\n                <p>Go to <NavLink to=\"/\">Bitfoss.com</NavLink>.</p>\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Page } from '../components/Page';\r\n\r\ninterface ProjectItemProps {\r\n    title: string;\r\n    description: string;\r\n    imgSrc?: string;\r\n    sourceUrl?: string;\r\n    demoUrl?: string;\r\n}\r\n\r\nconst ProjectItem = (props: ProjectItemProps) => {\r\n    return (\r\n        <div className=\"col-12 col-md-6 col-lg-4\">\r\n            <div className=\"m-3 rounded-lg shadow bg-base-one p-3\">\r\n                <img src={props.imgSrc} alt={props.title} className=\"rounded-lg shadow w-100 mb-3\" />\r\n                <h4>{props.title}</h4>\r\n                <p className=\"mb-0\" style={{ height: 75 }}>{props.description}</p>\r\n                {!props.demoUrl && !props.sourceUrl ? null : (\r\n                    <div className=\"pt-1 my-3 rounded-lg bg-gradient\" />\r\n                )}\r\n                {!props.demoUrl ? null : <small><a target=\"_blank\" rel=\"noreferrer\" href={props.demoUrl}>View</a></small>}\r\n                {!!props.sourceUrl && !!props.demoUrl ? <span className=\"text-theme-one\">&nbsp;|&nbsp;</span> : null}\r\n                {!props.sourceUrl ? null : <small><a target=\"_blank\" rel=\"noreferrer\" href={props.sourceUrl}>Source code</a></small>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Projects = () => {\r\n    const projects: ProjectItemProps[] = [\r\n        {\r\n            imgSrc: \"https://via.placeholder.com/150\",\r\n            title: \"Bitfoss.com\",\r\n            description: \"The website you're currently viewing.\",\r\n            demoUrl: \"https://www.bitfoss.com/\",\r\n            sourceUrl: \"https://github.com/bitfoss/bitfoss-website\"\r\n        },\r\n        {\r\n            imgSrc: \"/images/pulse.png\",\r\n            title: \"Pulse\",\r\n            description: \"See the lastest emergency information provided by the Danish Emergency Management Agency.\",\r\n            demoUrl: \"http://pulse.stackoverflow.dk/\"\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Page title=\"Projects\">\r\n            <div className=\"row justify-content-left no-gutters\">\r\n                {projects.map(p => <ProjectItem\r\n                    key={p.title}\r\n                    imgSrc={p.imgSrc}\r\n                    title={p.title}\r\n                    description={p.description}\r\n                    demoUrl={p.demoUrl}\r\n                    sourceUrl={p.sourceUrl}\r\n                />)}\r\n            </div>\r\n        </Page>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { fadeIn } from \"react-animations\";\r\n\r\nconst FadeInAnimated = styled.div`animation: 1s ${keyframes`${fadeIn}`}; `;\r\n\r\nexport enum AnimationType {\r\n    FadeIn = \"fadeIn\"\r\n}\r\n\r\ninterface AnimationProps {\r\n    type: AnimationType;\r\n    children?: React.ReactNode;\r\n    className?: string;\r\n    hidden?: boolean;\r\n}\r\n\r\nexport const Animation = (props: AnimationProps) => {\r\n    return <FadeInAnimated\r\n        className={props.className}\r\n        hidden={props.hidden}>{props.children}</FadeInAnimated>\r\n};\r\n","import React, { useState } from 'react';\r\nimport { HashRouter as Router, NavLink, Route, Switch } from \"react-router-dom\";\r\nimport { Home } from './pages/Home';\r\nimport { NotFound } from './pages/NotFound';\r\nimport { Projects } from './pages/Projects';\r\nimport { BsXDiamondFill, BsXDiamond, BsCaretRightFill } from \"react-icons/bs\";\r\nimport { Animation, AnimationType } from \"./components/Animation\";\r\n\r\nfunction App() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const MenuLink = (props: { to: string, text: string, exact?: boolean }) => {\r\n    const activeClassName = \"5821-4a78\";\r\n\r\n    return (\r\n      <>\r\n        <NavLink\r\n          onClick={() => setIsMenuOpen(false)}\r\n          exact={props.exact}\r\n          activeClassName={activeClassName}\r\n          className=\"d-block mt-3 p-2 text-theme-one\"\r\n          to={props.to} component={(e) => e.className.includes(activeClassName) ? (\r\n            <NavLink\r\n              onClick={() => setIsMenuOpen(false)}\r\n              exact={props.exact}\r\n              activeClassName={activeClassName}\r\n              className=\"d-block mt-3 p-2 text-theme-one\"\r\n              to={props.to}><BsCaretRightFill className=\"mt-n1 text-theme-two\" /> {props.text}</NavLink>\r\n          ) : (\r\n              <NavLink\r\n                onClick={() => setIsMenuOpen(false)}\r\n                exact={props.exact}\r\n                activeClassName={activeClassName}\r\n                className=\"d-block mt-3 p-2 text-theme-one\"\r\n                to={props.to}>{props.text}</NavLink>\r\n            )}>{props.text}</NavLink>\r\n      </>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n\r\n        {/* Header */}\r\n        <header className=\"shadow fixed-top bg-base-one\">\r\n          <div className=\"container py-1\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h1 className=\"my-1\"><NavLink\r\n                onClick={() => setIsMenuOpen(false)}\r\n                className=\"text-decoration-none\" to=\"/\">\r\n                <span className=\"text-theme-one\">&#123;</span>\r\n                <span className=\"text-theme-one\"> Bitfoss </span>\r\n                <span className=\"text-theme-one\">&#125;</span>\r\n              </NavLink></h1>\r\n              <button className=\"btn shadow-none\" onClick={() => setIsMenuOpen(!isMenuOpen)}>\r\n                {isMenuOpen ?\r\n                  <BsXDiamondFill size={20} className=\"mt-n1 text-theme-one\" /> :\r\n                  <BsXDiamond size={20} className=\"mt-n1 text-theme-one\" />}\r\n              </button>\r\n            </div>\r\n\r\n            <Animation type={AnimationType.FadeIn} hidden={!isMenuOpen}>\r\n              <div className=\"text-right pb-3\">\r\n                <MenuLink to=\"/\" exact text=\"Home\" />\r\n                <MenuLink to=\"/projects\" text=\"Projects\" />\r\n              </div>\r\n            </Animation>\r\n          </div>\r\n          <div className=\"bg-gradient pt-1\"></div>\r\n        </header>\r\n\r\n        {/* Main */}\r\n        <main className=\"container py-3 pt-5 mt-5\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/projects\" exact component={Projects} />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </main>\r\n\r\n        {/* Footer */}\r\n        <footer className=\"text-center py-3\">\r\n          <p className=\"text-contrast\">2020 &copy; All rights reserved</p>\r\n        </footer>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It\"s the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport \"fontsource-ubuntu\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}